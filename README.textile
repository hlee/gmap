h1. Rails3-Mongoid-Devise

This example app combines "Mongoid":http://mongoid.org/ with "Devise":http://github.com/plataformatec/devise. Mongoid is a datastore that gives you quick development without schemas or migrations. Devise gives you ready-made authentication and user management.

Best of all, there's a detailed tutorial (walk-through) to show how it's built.

You can clone this app or generate a new Rails application using this app as a template.

h2. Help and More Information

To keep up to date with development of this app, follow the author on Twitter:
"http://twitter.com/yaxdotcom":http://twitter.com/yaxdotcom.

Any issues? Please create an "Issue":http://github.com/fortuity/rails3-mongoid-devise/issues on GitHub.

h2. "Building It" Tutorial

A complete walkthrough tutorial is available on the GitHub wiki:

"View the Tutorial":http://github.com/fortuity/rails3-mongoid-devise/wiki/Tutorial-%28Walkthrough%29

The tutorial documents each step to follow to create the application. Every step is documented concisely, so a complete beginner can create this application without any additional knowledge. However, no explanation is offered for any of the steps, so if you are a beginner, you’re advised to look for an introduction to Rails elsewhere. Refer to the "Rails Guides":http://guides.rubyonrails.info/ site for help if you are a beginner. Or read Michael Hartl's "Ruby on Rails Tutorial":http://railstutorial.org/ book.

If you simply wish to modify the application for your own project, you can download the application and set it up as described below, without following the tutorial.

h2. Similar Applications

For a simple Devise example using SQLite for Rails 3, see "plataformatec/devise_example":http://github.com/plataformatec/devise_example.

Andi Altendorfer has extended the app at "http://github.com/iboard/CBA":http://github.com/iboard/CBA with

* "OmniAuth":https://github.com/intridea/omniauth (for authentication via OpenID, Facebook, OAuth, etc.)
* "CanCan":https://github.com/ryanb/cancan (adding authorization by roles)
* "Paperclip":https://github.com/thoughtbot/paperclip (for avatars)

Kristian Mandrup has an application named "Cream":https://github.com/kristianmandrup/cream that integrates Devise, Roles and CanCan with Permits for a Rails 3 app with Mongoid or other ORMs.

h2. What Is Implemented -- and What Is Not

This is a barebones application that serves to demonstrate Mongoid and Devise working on Rails 3.

All you can do is visit a home page and see a list of users. With the default user's email and password (supplied below), you can log in and view details for each user. You can customize this app as you need.

h2. Dependencies

Before running this app, you need to install 

* The Ruby language (version 1.8.7 or 1.9.2)
* Rails (version 3.0.5)
* A working installation of "MongoDB":http://www.mongodb.org/ (version 1.6.0 or newer)

I recommend installing rvm, the "Ruby Version Manager":http://rvm.beginrescueend.com/, to manage multiple versions of Rails.

If you are using rvm, you can see a list of the Ruby versions currently installed:
@$ rvm list@

Check that appropriate versions of Ruby and Rails are installed in your development environment:
@$ ruby -v@
@$ rails -v@

If you don't have MongoDB installed on your computer, you'll need to install it and set it up to be always running on your computer (run at launch). On Mac OS X, the easiest way to install MongoDB is to install "Homebrew":http://mxcl.github.com/homebrew/ and then run the following:

<pre>
brew install mongo
sudo mkdir -p /data/db
sudo chmod -Rv 777 /data/
</pre>

h2. Getting the Application

You have several options for getting the code.

h4. Downloading the Code

If you simply wish to examine the example code, you can download the code ("clone the repository") with the command

@$ git clone git://github.com/fortuity/rails3-mongoid-devise.git@

The source code is managed with Git (a version control system). You'll need Git on your machine (install it from "http://git-scm.com/":http://git-scm.com/).

h4. Using the Ready-Made Application Template

You can use an application template to generate a new version of the example app. You’ll find an application template for this app in the "fortuity/rails3-application-templates":https://github.com/fortuity/rails3-application-templates repository.

Use the command:

@$ rails new APP_NAME -m https://github.com/fortuity/rails3-application-templates/raw/master/rails3-mongoid-devise-template.rb -T -O -J@

Use the @-T -O -J@ flags to skip Test::Unit files, Active Record files, and Prototype files.

bq. You MUST be using Rails 3.0.4 or newer. Generating a Rails application from an “HTTPS” URL does not work in Rails 3.0.3 and earlier versions.

This creates a new Rails app (with the @APP_NAME@ you provide) on your computer.

The application template offers you the following options:

* set up your view files using the Haml templating language
* use jQuery instead of Prototype as a Javascript framework
* use RSpec instead of TestUnit for unit testing
* use Cucumber for Behavior Driven Development
* install the heroku gem for deployment to Heroku
* use Yard instead of RDoc for documemntation

h4. Use "Recipes" to Customize an Application Template

The "tutorial":http://github.com/fortuity/rails3-mongoid-devise/wiki/Tutorial-%28Walkthrough%29 shows how a customized application template can be assembled from "recipes." You can use the "RailsWizard.org":http://railswizard.org/ web site to create your own custom application template, adding any template recipes you want from the "rails-template-recipes":https://github.com/fortuity/rails-template-recipes  repository.

h2. Getting Started

h3. About Required Gems

The application uses the following gems. I recommend checking for newer versions of these gems before proceeding:

* rails (version 3.0.5) "(check rubygems.org for the rails gem)":http://rubygems.org/gems/rails
* mongoid (version 2.0.0.rc.7) "(Check rubygems.org for the mongoid gem)":http://rubygems.org/gems/mongoid
* bson_ext (version 1.2.2) "(Check rubygems.org for the bson_ext gem)":http://rubygems.org/gems/bson_ext
* devise (version 1.2.rc) "(Check rubygems.org for the devise gem)":http://rubygems.org/gems/devise

The app has been tested with the indicated versions. If you are able to build the app with a newer gem, please create an "issue":http://github.com/fortuity/rails3-mongoid-devise/issues on GitHub and I will update the app.

h3. Install the Required Gems

Install the required gems on your computer:

@$ bundle install@

You can check which gems are installed on your computer with:

@$ gem list --local@

Keep in mind that you have installed these gems locally. When you deploy the app to another server, the same gems (and versions) must be available.

h3. Configure Mongoid

Mongoid provides access to the MongoDB database from Rails.

You can use the default configuration found in the file *config/mongoid.yml*.

If you want to see what's in your MongoDB databases, I recommend using the "MongoHub":http://mongohub.todayclose.com/ app (for Mac OS X).

h3. Set Up Configuration for Devise

This app uses Devise for user management and authentication. Devise is at "http://github.com/plataformatec/devise":http://github.com/plataformatec/devise.

You can modify the configuration file for Devise if you want to use something other than the defaults:

*config/initializers/devise.rb*

h3. Configure Email for Devise

Configure email by modifying

*config/initializers/devise.rb*

and setting the return email address for emails sent from the application.

You may need to set values for your mailhost in

*config/environments/development.rb*
*config/environments/production.rb*

h2. Create a Default User

h3. Set Up a Database Seed File

You'll want to set up a default user so you can easily log in to test the app. You can modify the file *db/seeds.rb* for your own name, email and password:

<pre>
puts 'EMPTY THE MONGODB DATABASE'
Mongoid.master.collections.reject { |c| c.name == 'system.indexes'}.each(&:drop)
puts 'SETTING UP DEFAULT USER LOGIN'
user = User.create! :name => 'First User', :email => 'user@test.com', :password => 'please', :password_confirmation => 'please'
puts 'New user created: ' << user.name
</pre>

Use the defaults or change the values for name, email, and password as you wish.

h3. Seed the Database

Add the default user to the MongoDB database by running the command:

@$ rake db:seed@

h3. Test the App

You can check that your app runs properly by entering the command

@$ rails server@

To see your application in action, open a browser window and navigate to "http://localhost:3000/":http://localhost:3000. You should see the default user listed on the home page. When you click on the user's name, you should be required to log in before seeing the user's detail page.

To sign in as the default user, (unless you've changed it) use

* email: user@test.com
* password: please

You should delete or change the pre-configured logins before you deploy your application.

h2. Deploying to Heroku

h3. Set Up Heroku

For your convenience, here are instructions for deploying your app to Heroku. Heroku provides low cost, easily configured Rails application hosting.

To deploy this app to Heroku, you must have a Heroku account. If you need to obtain one, visit "http://heroku.com/":http://heroku.com/ to set up an account. 

Make sure the Heroku gem is in your *Gemfile*. If it's not, add it and run

@$ bundle install@

to set up your gems again.

Add your public key immediately after installing the heroku gem so that you can use git to push or clone Heroku app repositories. See "http://docs.heroku.com/heroku-command":http://docs.heroku.com/heroku-command for details.

h3. Create Your Application on Heroku

Use the Heroku create command to create and name your new app.

@$ heroku create _myapp_@

h3. Heroku Add-on for MongoHQ

You can use a Heroku add-on to deploy your app using the MongoHQ service.

To enable the add-on, you can use the Heroku web interface or you can enter the following commands:

@$ heroku addons:add mongohq:free@

You can check that everything has been added correctly by running:

@$ heroku info --app myapp@

h3. Set Up Your Application on Heroku

Push your application to Heroku:

@$ git push heroku master@

Initialize your application database:

@$ heroku rake db:seed@

If you get the error message "failed to connect to any given host:port", the *config/application.rb* file may not have the correct MongoHQ connection parameters.

h3. Visit Your Site

Open your Heroku site in your default web browser:

@$ heroku open@

h3. Troubleshooting

If you get errors, you can troubleshoot by reviewing the log files:

@$ heroku logs@

h2. Customizing

"Devise":http://github.com/plataformatec/devise provides a variety of features for implementing authentication. See the Devise documentation for options.

This application provides no useful functionality apart from demonstrating Devise and Mongoid working together on Rails 3. Add any models, controllers, and views that you need.

h2. Testing

The application contains RSpec unit tests and Cucumber scenarios and steps. The tests are minimal and can be improved.

Please send the author a message, create an issue, or submit a pull request if you can contribute improved RSpec or Cucumber files.

After installing the application, run @rake -T@ to check that rake tasks for RSpec and Cucumber are available.

Run @rake spec@ to run all RSpec tests.

Run @rake cucumber@ (or more simply, @cucumber@) to run all Cucumber scenarios and steps.

h2. Documentation and Support

See the "Tutorial":http://github.com/fortuity/rails3-mongoid-devise/wiki/Tutorial-%28Walkthrough%29 for this app for details of how it was built. Please create an "Issue":http://github.com/fortuity/rails3-mongoid-devise/issues on GitHub if you identify any problems or have suggestions for improvements.

For a Mongoid introduction, Ryan Bates offers a "Railscast on Mongoid":http://railscasts.com/episodes/238-mongoid. You can find documentation for "Mongoid":http://mongoid.org/ at "http://mongoid.org/":http://mongoid.org/ There is an active "Mongoid mailing list":http://groups.google.com/group/mongoid and you can submit "Mongoid issues":http://github.com/durran/mongoid/issues at GitHub.

For a Devise introduction, Ryan Bates offers a "Railscast on Devise":http://railscasts.com/episodes/209-introducing-devise. You can find documentation for "Devise":http://github.com/plataformatec/devise at "http://github.com/plataformatec/devise":http://github.com/plataformatec/devise. There is an active "Devise mailing list":http://groups.google.com/group/plataformatec-devise and you can submit "Devise issues":http://github.com/plataformatec/devise/issues at GitHub.

This application is provided without additional documentation or support.

h2. Contributing

If you make improvements to this application, please share with others.

Send the author a message, create an "issue":http://github.com/fortuity/rails3-mongoid-devise/issues, or fork the project and submit a pull request.

If you add functionality to this application, create an alternative implementation, or build an application that is similar, please contact me and I'll add a note to the README so that others can find your work.

h2. Credits

Daniel Kehoe ("http://danielkehoe.com/":http://danielkehoe.com/) implemented the application and wrote the tutorial.

Is the app useful to you? Follow me on Twitter:
"http://twitter.com/yaxdotcom":http://twitter.com/yaxdotcom
and tweet some praise. I'd love to know you were helped out by what I've put together.

Any issues? Please create an "Issue":http://github.com/fortuity/rails3-mongoid-devise/issues on GitHub.

h4. Contributors

Thank you to contributor "Nakort Valles":https://github.com/Nakort for updating to newer gems.

Thank you for improvements to the tutorial by contributors "Cory Foy":https://github.com/CoryFoy, "Luca G. Soave":https://github.com/lgs, "Bob Clewell":https://github.com/bobclewell, and "Justin Workman":https://github.com/xtagon.

h2. License

h3. Public Domain Dedication

This work is a compilation and derivation from other previously released works. With the exception of various included works, which may be restricted by other licenses, the author or authors of this code dedicate any and all copyright interest in this code to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this code under copyright law.
