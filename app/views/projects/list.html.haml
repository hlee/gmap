= form_tag list_projects_path, method: :get  do
  %span{style: 'padding-right: 10px'} Department
  = select_tag 'department', options_from_collection_for_select(Department.all.to_a, 'id', 'name')
  %span Parameter
  = select_tag 'parameter', parameter_options
  %span Range
  = text_field_tag 'start_value'
  %span To
  = text_field_tag 'end_value'
  %br
  = submit_tag 'Search'

%h1 Show Projects

#map_canvas
  = gmaps("map_options" => { "auto_zoom" => false, "type" => "ROADMAP", "zoom" => 12, "detect_location" => true, "center_on_user" => true, "auto_adjust" => true},"markers" => { "data" => @projects.to_gmaps4rails })
%button#ajax{type: "button"} Load Map

= link_to 'New Project', new_project_path

%table.table
  %tr
    %th Name
    %th Created at
    %th Description
    %th Latitude
    %th Longitude
    %th Salinity
    %th Temperature
    %th Oxygen
    %th Saturation
    -#%th
    -#%th
    -#%th
  - @projects.each do |project|
    %tr
      %td 
        = project.name
      %td
        = project.created_at
      %td
        = project.description
      %td
        = project.location.first
      %td
        = project.location.last
      %td
        = project.salinity
      %td
        = project.temperature
      %td
        = project.oxygen
      %td 
        = project.saturation
      -#%td
        -#= link_to 'Show', project
      -#%td
        -#= link_to 'Edit', edit_project_path(project)
      -#%td
        -#= link_to 'Destroy', project, method: :delete, data: { confirm: 'Are you sure?' }

:javascript
  var fetch_location = function(pos) {
    $.ajax({
      type: 'get',
      url: "/projects/fetch",
      data: {lat: pos.lat(), lng: pos.lng()}
    }).done(function(msg){
        alert("Project info: " + msg);
      });
  };
  Gmaps.map.HandleDragend = function(pos) {
    fetch_location(pos);
    var geocoder = new google.maps.Geocoder();
      geocoder.geocode({
        latLng: pos
      }, function(responses) {
        if (responses && responses.length > 0) {
          alert("Project Address: " + responses[0].formatted_address);
        } 
        else {
          alert('Cannot determine address at this location.');
        }
      });
  };

  Gmaps.map.callback = function() {
    for (var i = 0; i <  this.markers.length; ++i) {
      google.maps.event.addListener(Gmaps.map.markers[i].serviceObject, 'click', function() { Gmaps.map.HandleDragend(this.getPosition()) });
    }
  };

